{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAASF,SAASC,cAAc,mBAItC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAZPN,EAAQc,iBAAiB,UAgBzB,SAA0BC,GACxBA,EAAGC,iBACHb,EAAOc,UAAW,EAElB,MAAMC,GAAQH,EAAGI,cAAcC,SAASF,KAAKG,MACvCC,GAAUP,EAAGI,cAAcC,SAASE,OAAOD,MACjD,IAAIE,GAASR,EAAGI,cAAcC,SAASd,MAAMe,MAG7CR,YAAW,KACTV,EAAOc,UAAW,IACjBK,EAASJ,EAAOK,GAEnB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCpB,EAAcoB,EAAGD,GACdE,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA4B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,UAEtDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA4B,OAAOG,QAAQ,uBAAqBxB,QAAeC,UAGvDiB,GAASL","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst btnRef = document.querySelector('[type=\"submit\"]');\n\nformRef.addEventListener('submit', handleSubmitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmitForm(ev) {\n  ev.preventDefault();\n  btnRef.disabled = true;\n\n  const step = +ev.currentTarget.elements.step.value;\n  const amount = +ev.currentTarget.elements.amount.value;\n  let delay = +ev.currentTarget.elements.delay.value;\n  // console.log(ev.currentTarget.elements);\n\n  setTimeout(() => {\n    btnRef.disabled = false;\n  }, amount * step + delay);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise  ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$btnRef","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","ev","preventDefault","disabled","step","currentTarget","elements","value","amount","delay1","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.3a638220.js.map"}